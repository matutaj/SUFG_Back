openapi: 3.0.0
info:
  title: API do Sistema de Gerenciamento
  version: 1.0.0
  description: |-
    Documentação completa da API para o sistema de gerenciamento.
    Inclui todos os endpoints para todas as entidades do sistema.

servers:
  - url: http://localhost:3000
    description: Servidor de desenvolvimento local

tags:
  - name: Autenticação
    description: Endpoints para login e autenticação
  - name: Alertas
    description: Gerenciamento de alertas do sistema
  - name: Caixas
    description: Gerenciamento de caixas registradoras
  - name: Categorias de Produto
    description: Gerenciamento de categorias de produtos
  - name: Clientes
    description: Gerenciamento de clientes
  - name: Corredores
    description: Gerenciamento de corredores de armazenamento
  - name: Entradas de Estoque
    description: Gerenciamento de entradas no estoque
  - name: Estoque
    description: Gerenciamento do estoque atual
  - name: Funcionários
    description: Gerenciamento de funcionários
  - name: Funcionários Caixas
    description: Associação de funcionários a caixas
  - name: Funcionários Tarefas
    description: Tarefas atribuídas a funcionários
  - name: Funções
    description: Gerenciamento de funções/funções de funcionários
  - name: Localizações
    description: Gerenciamento de localizações físicas
  - name: Prateleiras
    description: Gerenciamento de prateleiras
  - name: Produtos
    description: Gerenciamento de produtos
  - name: Produtos Localizações
    description: Localização física de produtos
  - name: Relatórios
    description: Geração de relatórios do sistema
  - name: Seções
    description: Gerenciamento de seções de armazenamento
  - name: Tarefas
    description: Gerenciamento de tarefas
  - name: Transferências
    description: Gerenciamento de transferências de estoque
  - name: Vendas
    description: Gerenciamento de vendas
  - name: Vendas Produtos
    description: Produtos associados a vendas

paths:
  /login:
    post:
      tags: [Autenticação]
      summary: Autentica um usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, senha]
              properties:
                email:
                  type: string
                  format: email
                senha:
                  type: string
                  format: password
              example:
                email: admin@example.com
                senha: senha123
      responses:
        "200":
          description: Login bem-sucedido
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  usuario:
                    $ref: "#/components/schemas/Funcionario"
        "401":
          description: Credenciais inválidas
        "400":
          description: Dados inválidos

  # Alertas
  /alerta:
    get:
      tags: [Alertas]
      summary: Lista todos os alertas
      responses:
        "200":
          description: Lista de alertas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Alerta"
    post:
      tags: [Alertas]
      summary: Cria um novo alerta
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertaInput"
      responses:
        "201":
          description: Alerta criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alerta"
        "400":
          description: Dados inválidos

  /alerta/{id}:
    get:
      tags: [Alertas]
      summary: Obtém um alerta pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do alerta
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alerta"
        "404":
          description: Alerta não encontrado
    put:
      tags: [Alertas]
      summary: Atualiza um alerta
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AlertaInput"
      responses:
        "200":
          description: Alerta atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Alerta"
        "404":
          description: Alerta não encontrado
    delete:
      tags: [Alertas]
      summary: Remove um alerta
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Alerta removido
        "404":
          description: Alerta não encontrado

  /alerta/nome/{nomeAlerta}:
    get:
      tags: [Alertas]
      summary: Busca alertas pelo nome
      parameters:
        - in: path
          name: nomeAlerta
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de alertas encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Alerta"
        "404":
          description: Nenhum alerta encontrado

  # Caixas
  /caixa:
    get:
      tags: [Caixas]
      summary: Lista todos os caixas
      responses:
        "200":
          description: Lista de caixas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Caixa"
    post:
      tags: [Caixas]
      summary: Cria um novo caixa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaixaInput"
      responses:
        "201":
          description: Caixa criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Caixa"
        "400":
          description: Dados inválidos

  /caixa/{id}:
    get:
      tags: [Caixas]
      summary: Obtém um caixa pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do caixa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Caixa"
        "404":
          description: Caixa não encontrado
    put:
      tags: [Caixas]
      summary: Atualiza um caixa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaixaInput"
      responses:
        "200":
          description: Caixa atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Caixa"
        "404":
          description: Caixa não encontrado
    delete:
      tags: [Caixas]
      summary: Remove um caixa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Caixa removido
        "404":
          description: Caixa não encontrado

  /caixa/nome/{nomeCaixa}:
    get:
      tags: [Caixas]
      summary: Busca caixas pelo nome
      parameters:
        - in: path
          name: nomeCaixa
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de caixas encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Caixa"
        "404":
          description: Nenhum caixa encontrado

  /caixa/mac/{mac}:
    get:
      tags: [Caixas]
      summary: Busca caixa pelo endereço MAC
      parameters:
        - in: path
          name: mac
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do caixa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Caixa"
        "404":
          description: Caixa não encontrado

  # Categorias de Produto
  /categoria-produto:
    get:
      tags: [Categorias de Produto]
      summary: Lista todas as categorias de produto
      responses:
        "200":
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoriaProduto"
    post:
      tags: [Categorias de Produto]
      summary: Cria uma nova categoria de produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriaProdutoInput"
      responses:
        "201":
          description: Categoria criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
        "400":
          description: Dados inválidos

  /categoria-produto/{id}:
    get:
      tags: [Categorias de Produto]
      summary: Obtém uma categoria pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da categoria
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
        "404":
          description: Categoria não encontrada
    put:
      tags: [Categorias de Produto]
      summary: Atualiza uma categoria
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoriaProdutoInput"
      responses:
        "200":
          description: Categoria atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CategoriaProduto"
        "404":
          description: Categoria não encontrada
    delete:
      tags: [Categorias de Produto]
      summary: Remove uma categoria
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Categoria removida
        "404":
          description: Categoria não encontrada

  /categoria-produto/nome/{nomeCategoria}:
    get:
      tags: [Categorias de Produto]
      summary: Busca categorias pelo nome
      parameters:
        - in: path
          name: nomeCategoria
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de categorias encontradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoriaProduto"
        "404":
          description: Nenhuma categoria encontrada

  # Clientes
  /cliente:
    get:
      tags: [Clientes]
      summary: Lista todos os clientes
      responses:
        "200":
          description: Lista de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cliente"
    post:
      tags: [Clientes]
      summary: Cria um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteInput"
      responses:
        "201":
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        "400":
          description: Dados inválidos

  /cliente/{id}:
    get:
      tags: [Clientes]
      summary: Obtém um cliente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        "404":
          description: Cliente não encontrado
    put:
      tags: [Clientes]
      summary: Atualiza um cliente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClienteInput"
      responses:
        "200":
          description: Cliente atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        "404":
          description: Cliente não encontrado
    delete:
      tags: [Clientes]
      summary: Remove um cliente
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Cliente removido
        "404":
          description: Cliente não encontrado

  /cliente/nome/{nomeCliente}:
    get:
      tags: [Clientes]
      summary: Busca clientes pelo nome
      parameters:
        - in: path
          name: nomeCliente
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de clientes encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Cliente"
        "404":
          description: Nenhum cliente encontrado

  /cliente/email/{emailCliente}:
    get:
      tags: [Clientes]
      summary: Busca cliente pelo email
      parameters:
        - in: path
          name: emailCliente
          required: true
          schema:
            type: string
            format: email
      responses:
        "200":
          description: Dados do cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        "404":
          description: Cliente não encontrado

  /cliente/telefone/{telefoneCliente}:
    get:
      tags: [Clientes]
      summary: Busca cliente pelo telefone
      parameters:
        - in: path
          name: telefoneCliente
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        "404":
          description: Cliente não encontrado

  /cliente/contribuinte/{numeroContribuinte}:
    get:
      tags: [Clientes]
      summary: Busca cliente pelo número de contribuinte
      parameters:
        - in: path
          name: numeroContribuinte
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do cliente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cliente"
        "404":
          description: Cliente não encontrado

  # Corredores
  /corredor:
    get:
      tags: [Corredores]
      summary: Lista todos os corredores
      responses:
        "200":
          description: Lista de corredores
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Corredor"
    post:
      tags: [Corredores]
      summary: Cria um novo corredor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorredorInput"
      responses:
        "201":
          description: Corredor criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Corredor"
        "400":
          description: Dados inválidos

  /corredor/{id}:
    get:
      tags: [Corredores]
      summary: Obtém um corredor pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do corredor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Corredor"
        "404":
          description: Corredor não encontrado
    put:
      tags: [Corredores]
      summary: Atualiza um corredor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CorredorInput"
      responses:
        "200":
          description: Corredor atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Corredor"
        "404":
          description: Corredor não encontrado
    delete:
      tags: [Corredores]
      summary: Remove um corredor
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Corredor removido
        "404":
          description: Corredor não encontrado

  /corredor/nome/{nomeCorredor}:
    get:
      tags: [Corredores]
      summary: Busca corredores pelo nome
      parameters:
        - in: path
          name: nomeCorredor
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de corredores encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Corredor"
        "404":
          description: Nenhum corredor encontrado

  # Entradas de Estoque
  /entrada-estoque:
    get:
      tags: [Entradas de Estoque]
      summary: Lista todas as entradas de estoque
      responses:
        "200":
          description: Lista de entradas de estoque
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntradaEstoque"
    post:
      tags: [Entradas de Estoque]
      summary: Cria uma nova entrada de estoque
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntradaEstoqueInput"
      responses:
        "201":
          description: Entrada de estoque criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntradaEstoque"
        "400":
          description: Dados inválidos

  /entrada-estoque/{id}:
    get:
      tags: [Entradas de Estoque]
      summary: Obtém uma entrada de estoque pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da entrada de estoque
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntradaEstoque"
        "404":
          description: Entrada de estoque não encontrada
    put:
      tags: [Entradas de Estoque]
      summary: Atualiza uma entrada de estoque
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EntradaEstoqueInput"
      responses:
        "200":
          description: Entrada de estoque atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntradaEstoque"
        "404":
          description: Entrada de estoque não encontrada
    delete:
      tags: [Entradas de Estoque]
      summary: Remove uma entrada de estoque
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Entrada de estoque removida
        "404":
          description: Entrada de estoque não encontrada

  /entrada-estoque/produto/{id_produto}:
    get:
      tags: [Entradas de Estoque]
      summary: Busca entradas de estoque por produto
      parameters:
        - in: path
          name: id_produto
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de entradas de estoque
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EntradaEstoque"
        "404":
          description: Nenhuma entrada encontrada

  # Estoque
  /estoque:
    get:
      tags: [Estoque]
      summary: Lista todos os registros de estoque
      responses:
        "200":
          description: Lista de estoques
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Estoque"
    post:
      tags: [Estoque]
      summary: Cria um novo registro de estoque
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EstoqueInput"
      responses:
        "201":
          description: Estoque criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estoque"
        "400":
          description: Dados inválidos

  /estoque/{id}:
    get:
      tags: [Estoque]
      summary: Obtém um registro de estoque pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do estoque
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estoque"
        "404":
          description: Estoque não encontrado
    put:
      tags: [Estoque]
      summary: Atualiza um registro de estoque
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EstoqueInput"
      responses:
        "200":
          description: Estoque atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estoque"
        "404":
          description: Estoque não encontrado
    delete:
      tags: [Estoque]
      summary: Remove um registro de estoque
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Estoque removido
        "404":
          description: Estoque não encontrado

  /estoque/produto/{id_produto}:
    get:
      tags: [Estoque]
      summary: Busca estoque por produto
      parameters:
        - in: path
          name: id_produto
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do estoque
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estoque"
        "404":
          description: Estoque não encontrado

  # Funcionários
  /funcionario:
    get:
      tags: [Funcionários]
      summary: Lista todos os funcionários
      responses:
        "200":
          description: Lista de funcionários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Funcionario"
    post:
      tags: [Funcionários]
      summary: Cria um novo funcionário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncionarioInput"
      responses:
        "201":
          description: Funcionário criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        "400":
          description: Dados inválidos

  /funcionario/{id}:
    get:
      tags: [Funcionários]
      summary: Obtém um funcionário pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do funcionário
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        "404":
          description: Funcionário não encontrado
    put:
      tags: [Funcionários]
      summary: Atualiza um funcionário
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncionarioInput"
      responses:
        "200":
          description: Funcionário atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        "404":
          description: Funcionário não encontrado
    delete:
      tags: [Funcionários]
      summary: Remove um funcionário
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Funcionário removido
        "404":
          description: Funcionário não encontrado

  /funcionario/nome/{nomeFuncionario}:
    get:
      tags: [Funcionários]
      summary: Busca funcionários pelo nome
      parameters:
        - in: path
          name: nomeFuncionario
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de funcionários encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Funcionario"
        "404":
          description: Nenhum funcionário encontrado

  /funcionario/email/{emailFuncionario}:
    get:
      tags: [Funcionários]
      summary: Busca funcionário pelo email
      parameters:
        - in: path
          name: emailFuncionario
          required: true
          schema:
            type: string
            format: email
      responses:
        "200":
          description: Dados do funcionário
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        "404":
          description: Funcionário não encontrado

  /funcionario/telefone/{telefoneFuncionario}:
    get:
      tags: [Funcionários]
      summary: Busca funcionário pelo telefone
      parameters:
        - in: path
          name: telefoneFuncionario
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do funcionário
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        "404":
          description: Funcionário não encontrado

  /funcionario/contribuinte/{numeroBI}:
    get:
      tags: [Funcionários]
      summary: Busca funcionário pelo número de BI
      parameters:
        - in: path
          name: numeroBI
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do funcionário
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcionario"
        "404":
          description: Funcionário não encontrado

  # Funcionários Caixas
  /funcionario-caixa:
    get:
      tags: [Funcionários Caixas]
      summary: Lista todas as associações de funcionários a caixas
      responses:
        "200":
          description: Lista de associações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FuncionarioCaixa"
    post:
      tags: [Funcionários Caixas]
      summary: Cria uma nova associação de funcionário a caixa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncionarioCaixaInput"
      responses:
        "201":
          description: Associação criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioCaixa"
        "400":
          description: Dados inválidos

  /funcionario-caixa/{id}:
    get:
      tags: [Funcionários Caixas]
      summary: Obtém uma associação pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da associação
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioCaixa"
        "404":
          description: Associação não encontrada
    put:
      tags: [Funcionários Caixas]
      summary: Atualiza uma associação
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncionarioCaixaInput"
      responses:
        "200":
          description: Associação atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioCaixa"
        "404":
          description: Associação não encontrada
    delete:
      tags: [Funcionários Caixas]
      summary: Remove uma associação
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Associação removida
        "404":
          description: Associação não encontrada

  /funcionario-caixa/caixa/{id_caixa}:
    get:
      tags: [Funcionários Caixas]
      summary: Busca associações por caixa
      parameters:
        - in: path
          name: id_caixa
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de associações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FuncionarioCaixa"
        "404":
          description: Nenhuma associação encontrada

  /funcionario-caixa/funcionario/{id_funcionario}:
    get:
      tags: [Funcionários Caixas]
      summary: Busca associações por funcionário
      parameters:
        - in: path
          name: id_funcionario
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de associações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FuncionarioCaixa"
        "404":
          description: Nenhuma associação encontrada

  # Funcionários Tarefas
  /funcionario-tarefa:
    get:
      tags: [Funcionários Tarefas]
      summary: Lista todas as tarefas de funcionários
      responses:
        "200":
          description: Lista de tarefas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FuncionarioTarefa"
    post:
      tags: [Funcionários Tarefas]
      summary: Cria uma nova tarefa para funcionário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncionarioTarefaInput"
      responses:
        "201":
          description: Tarefa criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioTarefa"
        "400":
          description: Dados inválidos

  /funcionario-tarefa/{id}:
    get:
      tags: [Funcionários Tarefas]
      summary: Obtém uma tarefa pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da tarefa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioTarefa"
        "404":
          description: Tarefa não encontrada
    put:
      tags: [Funcionários Tarefas]
      summary: Atualiza uma tarefa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncionarioTarefaInput"
      responses:
        "200":
          description: Tarefa atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FuncionarioTarefa
                                $ref: "#/components/schemas/FuncionarioTarefa"
        "404":
          description: Tarefa não encontrada
    delete:
      tags: [Funcionários Tarefas]
      summary: Remove uma tarefa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Tarefa removida
        "404":
          description: Tarefa não encontrada

  /funcionario-tarefa/funcionario/{id_funcionario}:
    get:
      tags: [Funcionários Tarefas]
      summary: Busca tarefas por funcionário
      parameters:
        - in: path
          name: id_funcionario
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de tarefas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FuncionarioTarefa"
        "404":
          description: Nenhuma tarefa encontrada

  /funcionario-tarefa/tarefa/{id_tarefa}:
    get:
      tags: [Funcionários Tarefas]
      summary: Busca funcionários por tarefa
      parameters:
        - in: path
          name: id_tarefa
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de funcionários associados à tarefa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FuncionarioTarefa"
        "404":
          description: Nenhum funcionário encontrado

  # Funções
  /funcao:
    get:
      tags: [Funções]
      summary: Lista todas as funções
      responses:
        "200":
          description: Lista de funções
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Funcao"
    post:
      tags: [Funções]
      summary: Cria uma nova função
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncaoInput"
      responses:
        "201":
          description: Função criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcao"
        "400":
          description: Dados inválidos

  /funcao/{id}:
    get:
      tags: [Funções]
      summary: Obtém uma função pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da função
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcao"
        "404":
          description: Função não encontrada
    put:
      tags: [Funções]
      summary: Atualiza uma função
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FuncaoInput"
      responses:
        "200":
          description: Função atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Funcao"
        "404":
          description: Função não encontrada
    delete:
      tags: [Funções]
      summary: Remove uma função
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Função removida
        "404":
          description: Função não encontrada

  /funcao/nome/{nomeFuncao}:
    get:
      tags: [Funções]
      summary: Busca funções pelo nome
      parameters:
        - in: path
          name: nomeFuncao
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de funções encontradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Funcao"
        "404":
          description: Nenhuma função encontrada

  # Localizações
  /localizacao:
    get:
      tags: [Localizações]
      summary: Lista todas as localizações
      responses:
        "200":
          description: Lista de localizações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Localizacao"
    post:
      tags: [Localizações]
      summary: Cria uma nova localização
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalizacaoInput"
      responses:
        "201":
          description: Localização criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Localizacao"
        "400":
          description: Dados inválidos

  /localizacao/{id}:
    get:
      tags: [Localizações]
      summary: Obtém uma localização pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da localização
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Localizacao"
        "404":
          description: Localização não encontrada
    put:
      tags: [Localizações]
      summary: Atualiza uma localização
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalizacaoInput"
      responses:
        "200":
          description: Localização atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Localizacao"
        "404":
          description: Localização não encontrada
    delete:
      tags: [Localizações]
      summary: Remove uma localização
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Localização removida
        "404":
          description: Localização não encontrada

  /localizacao/nome/{nomeLocalizacao}:
    get:
      tags: [Localizações]
      summary: Busca localizações pelo nome
      parameters:
        - in: path
          name: nomeLocalizacao
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de localizações encontradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Localizacao"
        "404":
          description: Nenhuma localização encontrada

  # Prateleiras
  /prateleira:
    get:
      tags: [Prateleiras]
      summary: Lista todas as prateleiras
      responses:
        "200":
          description: Lista de prateleiras
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Prateleira"
    post:
      tags: [Prateleiras]
      summary: Cria uma nova prateleira
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrateleiraInput"
      responses:
        "201":
          description: Prateleira criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prateleira"
        "400":
          description: Dados inválidos

  /prateleira/{id}:
    get:
      tags: [Prateleiras]
      summary: Obtém uma prateleira pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da prateleira
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prateleira"
        "404":
          description: Prateleira não encontrada
    put:
      tags: [Prateleiras]
      summary: Atualiza uma prateleira
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PrateleiraInput"
      responses:
        "200":
          description: Prateleira atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Prateleira"
        "404":
          description: Prateleira não encontrada
    delete:
      tags: [Prateleiras]
      summary: Remove uma prateleira
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Prateleira removida
        "404":
          description: Prateleira não encontrada

  /prateleira/nome/{nomePrateleira}:
    get:
      tags: [Prateleiras]
      summary: Busca prateleiras pelo nome
      parameters:
        - in: path
          name: nomePrateleira
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de prateleiras encontradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Prateleira"
        "404":
          description: Nenhuma prateleira encontrada

  # Produtos
  /produto:
    get:
      tags: [Produtos]
      summary: Lista todos os produtos
      responses:
        "200":
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Produto"
    post:
      tags: [Produtos]
      summary: Cria um novo produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdutoInput"
      responses:
        "201":
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
        "400":
          description: Dados inválidos

  /produto/{id}:
    get:
      tags: [Produtos]
      summary: Obtém um produto pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do produto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
        "404":
          description: Produto não encontrado
    put:
      tags: [Produtos]
      summary: Atualiza um produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdutoInput"
      responses:
        "200":
          description: Produto atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
        "404":
          description: Produto não encontrado
    delete:
      tags: [Produtos]
      summary: Remove um produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Produto removido
        "404":
          description: Produto não encontrado

  /produto/nome/{nomeProduto}:
    get:
      tags: [Produtos]
      summary: Busca produtos pelo nome
      parameters:
        - in: path
          name: nomeProduto
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de produtos encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Produto"
        "404":
          description: Nenhum produto encontrado

  /produto/codigo-barras/{codigoBarras}:
    get:
      tags: [Produtos]
      summary: Busca produto por código de barras
      parameters:
        - in: path
          name: codigoBarras
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do produto
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Produto"
        "404":
          description: Produto não encontrado

  /produto/categoria/{id_categoria}:
    get:
      tags: [Produtos]
      summary: Busca produtos por categoria
      parameters:
        - in: path
          name: id_categoria
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Produto"
        "404":
          description: Nenhum produto encontrado

  # Produtos Localizações
  /produto-localizacao:
    get:
      tags: [Produtos Localizações]
      summary: Lista todas as localizações de produtos
      responses:
        "200":
          description: Lista de localizações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProdutoLocalizacao"
    post:
      tags: [Produtos Localizações]
      summary: Cria uma nova localização para produto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdutoLocalizacaoInput"
      responses:
        "201":
          description: Localização criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProdutoLocalizacao"
        "400":
          description: Dados inválidos

  /produto-localizacao/{id}:
    get:
      tags: [Produtos Localizações]
      summary: Obtém uma localização de produto pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da localização
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProdutoLocalizacao"
        "404":
          description: Localização não encontrada
    put:
      tags: [Produtos Localizações]
      summary: Atualiza uma localização de produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProdutoLocalizacaoInput"
      responses:
        "200":
          description: Localização atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProdutoLocalizacao"
        "404":
          description: Localização não encontrada
    delete:
      tags: [Produtos Localizações]
      summary: Remove uma localização de produto
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Localização removida
        "404":
          description: Localização não encontrada

  /produto-localizacao/produto/{id_produto}:
    get:
      tags: [Produtos Localizações]
      summary: Busca localizações por produto
      parameters:
        - in: path
          name: id_produto
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de localizações
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProdutoLocalizacao"
        "404":
          description: Nenhuma localização encontrada

  /produto-localizacao/localizacao/{id_localizacao}:
    get:
      tags: [Produtos Localizações]
      summary: Busca produtos por localização
      parameters:
        - in: path
          name: id_localizacao
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de produtos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProdutoLocalizacao"
        "404":
          description: Nenhum produto encontrado

  # Relatórios
  /relatorio/vendas:
    get:
      tags: [Relatórios]
      summary: Gera relatório de vendas
      parameters:
        - in: query
          name: dataInicio
          schema:
            type: string
            format: date
        - in: query
          name: dataFim
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Relatório de vendas
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelatorioVendas"
        "400":
          description: Parâmetros inválidos

  /relatorio/estoque:
    get:
      tags: [Relatórios]
      summary: Gera relatório de estoque
      responses:
        "200":
          description: Relatório de estoque
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelatorioEstoque"

  /relatorio/funcionarios:
    get:
      tags: [Relatórios]
      summary: Gera relatório de atividades de funcionários
      parameters:
        - in: query
          name: dataInicio
          schema:
            type: string
            format: date
        - in: query
          name: dataFim
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Relatório de funcionários
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RelatorioFuncionarios"
        "400":
          description: Parâmetros inválidos

  # Seções
  /secao:
    get:
      tags: [Seções]
      summary: Lista todas as seções
      responses:
        "200":
          description: Lista de seções
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Secao"
    post:
      tags: [Seções]
      summary: Cria uma nova seção
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecaoInput"
      responses:
        "201":
          description: Seção criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Secao"
        "400":
          description: Dados inválidos

  /secao/{id}:
    get:
      tags: [Seções]
      summary: Obtém uma seção pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da seção
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Secao"
        "404":
          description: Seção não encontrada
    put:
      tags: [Seções]
      summary: Atualiza uma seção
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SecaoInput"
      responses:
        "200":
          description: Seção atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Secao"
        "404":
          description: Seção não encontrada
    delete:
      tags: [Seções]
      summary: Remove uma seção
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Seção removida
        "404":
          description: Seção não encontrada

  /secao/nome/{nomeSecao}:
    get:
      tags: [Seções]
      summary: Busca seções pelo nome
      parameters:
        - in: path
          name: nomeSecao
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de seções encontradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Secao"
        "404":
          description: Nenhuma seção encontrada

  # Tarefas
  /tarefa:
    get:
      tags: [Tarefas]
      summary: Lista todas as tarefas
      responses:
        "200":
          description: Lista de tarefas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tarefa"
    post:
      tags: [Tarefas]
      summary: Cria uma nova tarefa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TarefaInput"
      responses:
        "201":
          description: Tarefa criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tarefa"
        "400":
          description: Dados inválidos

  /tarefa/{id}:
    get:
      tags: [Tarefas]
      summary: Obtém uma tarefa pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da tarefa
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tarefa"
        "404":
          description: Tarefa não encontrada
    put:
      tags: [Tarefas]
      summary: Atualiza uma tarefa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TarefaInput"
      responses:
        "200":
          description: Tarefa atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tarefa"
        "404":
          description: Tarefa não encontrada
    delete:
      tags: [Tarefas]
      summary: Remove uma tarefa
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Tarefa removida
        "404":
          description: Tarefa não encontrada

  /tarefa/nome/{nomeTarefa}:
    get:
      tags: [Tarefas]
      summary: Busca tarefas pelo nome
      parameters:
        - in: path
          name: nomeTarefa
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de tarefas encontradas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tarefa"
        "404":
          description: Nenhuma tarefa encontrada

  /tarefa/status/{status}:
    get:
      tags: [Tarefas]
      summary: Busca tarefas por status
      parameters:
        - in: path
          name: status
          required: true
          schema:
            type: string
            enum: [pendente, em_andamento, concluida, cancelada]
      responses:
        "200":
          description: Lista de tarefas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tarefa"
        "404":
          description: Nenhuma tarefa encontrada

  # Transferências
  /transferencia:
    get:
      tags: [Transferências]
      summary: Lista todas as transferências
      responses:
        "200":
          description: Lista de transferências
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transferencia"
    post:
      tags: [Transferências]
      summary: Cria uma nova transferência
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferenciaInput"
      responses:
        "201":
          description: Transferência criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transferencia"
        "400":
          description: Dados inválidos

  /transferencia/{id}:
    get:
      tags: [Transferências]
      summary: Obtém uma transferência pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da transferência
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transferencia"
        "404":
          description: Transferência não encontrada
    put:
      tags: [Transferências]
      summary: Atualiza uma transferência
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TransferenciaInput"
      responses:
        "200":
          description: Transferência atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transferencia"
        "404":
          description: Transferência não encontrada
    delete:
      tags: [Transferências]
      summary: Remove uma transferência
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Transferência removida
        "404":
          description: Transferência não encontrada

  /transferencia/produto/{id_produto}:
    get:
      tags: [Transferências]
      summary: Busca transferências por produto
      parameters:
        - in: path
          name: id_produto
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de transferências
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transferencia"
        "404":
          description: Nenhuma transferência encontrada

  /transferencia/origem/{id_origem}:
    get:
      tags: [Transferências]
      summary: Busca transferências por local de origem
      parameters:
        - in: path
          name: id_origem
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de transferências
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transferencia"
        "404":
          description: Nenhuma transferência encontrada

  /transferencia/destino/{id_destino}:
    get:
      tags: [Transferências]
      summary: Busca transferências por local de destino
      parameters:
        - in: path
          name: id_destino
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de transferências
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transferencia"
        "404":
          description: Nenhuma transferência encontrada

  # Vendas
  /venda:
    get:
      tags: [Vendas]
      summary: Lista todas as vendas
      responses:
        "200":
          description: Lista de vendas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Venda"
    post:
      tags: [Vendas]
      summary: Cria uma nova venda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VendaInput"
      responses:
        "201":
          description: Venda criada com sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Venda"
        "400":
          description: Dados inválidos

  /venda/{id}:
    get:
      tags: [Vendas]
      summary: Obtém uma venda pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados da venda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Venda"
        "404":
          description: Venda não encontrada
    put:
      tags: [Vendas]
      summary: Atualiza uma venda
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VendaInput"
      responses:
        "200":
          description: Venda atualizada
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Venda"
        "404":
          description: Venda não encontrada
    delete:
      tags: [Vendas]
      summary: Remove uma venda
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Venda removida
        "404":
          description: Venda não encontrada

  /venda/cliente/{id_cliente}:
    get:
      tags: [Vendas]
      summary: Busca vendas por cliente
      parameters:
        - in: path
          name: id_cliente
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de vendas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Venda"
        "404":
          description: Nenhuma venda encontrada

  /venda/funcionario/{id_funcionario}:
    get:
      tags: [Vendas]
      summary: Busca vendas por funcionário
      parameters:
        - in: path
          name: id_funcionario
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Lista de vendas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Venda"
        "404":
          description: Nenhuma venda encontrada

  /venda/data/{data}:
    get:
      tags: [Vendas]
      summary: Busca vendas por data
      parameters:
        - in: path
          name: data
          required: true
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Lista de vendas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Venda"
        "404":
          description: Nenhuma venda encontrada

  # Vendas Produtos
  /venda-produto:
    get:
      tags: [Vendas Produtos]
      summary: Lista todos os produtos de vendas
      responses:
        "200":
          description: Lista de produtos de vendas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/VendaProduto"
    post:
      tags: [Vendas Produtos]
      summary: Adiciona um produto a uma venda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VendaProdutoInput"
      responses:
        "201":
          description: Produto adicionado à venda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VendaProduto"
        "400":
          description: Dados inválidos

  /venda-produto/{id}:
    get:
      tags: [Vendas Produtos]
      summary: Obtém um produto de venda pelo ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Dados do produto da venda
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VendaProduto"
        "404":
          description: Produto de venda não encontrado
    put:
      tags: [Vendas Produtos]
      summary: Atualiza um produto de venda
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VendaProdutoInput"
      responses:
        "200":
          description: Produto de venda atualizado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VendaProduto"
        "404":
          description: Produto de venda não encontrado
    delete:
      tags: [Vendas Produtos]
      summary: Remove um produto de venda
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Produto de venda removido
        "404":